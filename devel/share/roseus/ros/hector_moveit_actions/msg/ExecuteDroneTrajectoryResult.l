;; Auto-generated. Do not edit!


(when (boundp 'hector_moveit_actions::ExecuteDroneTrajectoryResult)
  (if (not (find-package "HECTOR_MOVEIT_ACTIONS"))
    (make-package "HECTOR_MOVEIT_ACTIONS"))
  (shadow 'ExecuteDroneTrajectoryResult (find-package "HECTOR_MOVEIT_ACTIONS")))
(unless (find-package "HECTOR_MOVEIT_ACTIONS::EXECUTEDRONETRAJECTORYRESULT")
  (make-package "HECTOR_MOVEIT_ACTIONS::EXECUTEDRONETRAJECTORYRESULT"))

(in-package "ROS")
;;//! \htmlinclude ExecuteDroneTrajectoryResult.msg.html


(intern "*SUCCESSFUL*" (find-package "HECTOR_MOVEIT_ACTIONS::EXECUTEDRONETRAJECTORYRESULT"))
(shadow '*SUCCESSFUL* (find-package "HECTOR_MOVEIT_ACTIONS::EXECUTEDRONETRAJECTORYRESULT"))
(defconstant hector_moveit_actions::ExecuteDroneTrajectoryResult::*SUCCESSFUL* 0)
(intern "*INVALID_GOAL*" (find-package "HECTOR_MOVEIT_ACTIONS::EXECUTEDRONETRAJECTORYRESULT"))
(shadow '*INVALID_GOAL* (find-package "HECTOR_MOVEIT_ACTIONS::EXECUTEDRONETRAJECTORYRESULT"))
(defconstant hector_moveit_actions::ExecuteDroneTrajectoryResult::*INVALID_GOAL* -1)
(intern "*PATH_TOLERANCE_VIOLATED*" (find-package "HECTOR_MOVEIT_ACTIONS::EXECUTEDRONETRAJECTORYRESULT"))
(shadow '*PATH_TOLERANCE_VIOLATED* (find-package "HECTOR_MOVEIT_ACTIONS::EXECUTEDRONETRAJECTORYRESULT"))
(defconstant hector_moveit_actions::ExecuteDroneTrajectoryResult::*PATH_TOLERANCE_VIOLATED* -2)
(intern "*COLLISION_IN_FRONT*" (find-package "HECTOR_MOVEIT_ACTIONS::EXECUTEDRONETRAJECTORYRESULT"))
(shadow '*COLLISION_IN_FRONT* (find-package "HECTOR_MOVEIT_ACTIONS::EXECUTEDRONETRAJECTORYRESULT"))
(defconstant hector_moveit_actions::ExecuteDroneTrajectoryResult::*COLLISION_IN_FRONT* 3)
(defclass hector_moveit_actions::ExecuteDroneTrajectoryResult
  :super ros::object
  :slots (_result_code ))

(defmethod hector_moveit_actions::ExecuteDroneTrajectoryResult
  (:init
   (&key
    ((:result_code __result_code) 0)
    )
   (send-super :init)
   (setq _result_code (round __result_code))
   self)
  (:result_code
   (&optional __result_code)
   (if __result_code (setq _result_code __result_code)) _result_code)
  (:serialization-length
   ()
   (+
    ;; int32 _result_code
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; int32 _result_code
       (write-long _result_code s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; int32 _result_code
     (setq _result_code (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get hector_moveit_actions::ExecuteDroneTrajectoryResult :md5sum-) "264ca3d6aad1463d76554dc6f52d4444")
(setf (get hector_moveit_actions::ExecuteDroneTrajectoryResult :datatype-) "hector_moveit_actions/ExecuteDroneTrajectoryResult")
(setf (get hector_moveit_actions::ExecuteDroneTrajectoryResult :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Result definition
int32 result_code
int32 SUCCESSFUL = 0
int32 INVALID_GOAL = -1
int32 PATH_TOLERANCE_VIOLATED = -2
int32 COLLISION_IN_FRONT = 3

")



(provide :hector_moveit_actions/ExecuteDroneTrajectoryResult "264ca3d6aad1463d76554dc6f52d4444")


